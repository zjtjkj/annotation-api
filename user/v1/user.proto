syntax = "proto3";

package api.user.v1;
import "google/api/annotations.proto";

option go_package = "user/api/user/v1;v1";

service User {
	rpc CreateUser (CreateUserRequest) returns (CreateUserReply) {
		option (google.api.http) = {
			post: "/api/v1/user/create"
			body: "*"
		};
	}
	rpc UpdateUser (UpdateUserRequest) returns (UpdateUserReply) {
		option (google.api.http) = {
			post: "/api/v1/user/update"
			body: "*"
		};
	}
	rpc UpdatePwd(UpdatePwdRequest) returns (UpdatePwdReply) {
		option (google.api.http) = {
			post: "/api/v1/user/pwd/update"
			body: "*"
		};
	}
	rpc UpdateStatus(UpdateStatusRequest) returns (UpdateStatusReply){
		option (google.api.http) = {
			post: "/api/v1/user/status/update"
			body: "*"
		};
	}
	rpc DeleteUser (DeleteUserRequest) returns (DeleteUserReply) {
		option (google.api.http) = {
			post: "/api/v1/user/delete"
			body: "*"
		};
	}
	rpc GetUser (GetUserRequest) returns (GetUserReply) {
		option (google.api.http) = {
			post: "/api/v1/user/get"
			body: "*"
		};
	}
	rpc GetDeletedUser(GetDeletedUserRequest) returns (GetDeletedUserReply) {
		option (google.api.http) = {
			post: "/api/v1/user/deleted/get"
			body: "*"
		};
	}
	rpc ListUser (ListUserRequest) returns (ListUserReply) {
		option (google.api.http) = {
			post: "/api/v1/user/list"
			body: "*"
		};
	}
	rpc GetUserByUsername(GetUserByUsernameRequest) returns (GetUserByUsernameReply) {
		option (google.api.http) = {
			post: "/api/v1/user/get/username"
			body: "*"
		};
	}
	rpc GetStatus(GetStatusRequest) returns (GetStatusReply) {
		option (google.api.http) = {
			post: "/api/v1/status/get"
			body: "*"
		};
	}
	rpc DistributeGroup(DistributeGroupRequest) returns (DistributeGroupReply) {
		option (google.api.http) = {
			post: "/api/v1/user/distribute"
			body: "*"
		};
	}
	rpc BatchGetUser(BatchGetUserRequest) returns (BatchGetUserReply) {
		option (google.api.http) = {
			post: "/api/v1/user/batch/get",
			body: "*"
		};
	}
}

enum Status {
	Annotator = 0;
	Auditor = 1;
	Administrator = 2;
}

message CreateUserRequest {
	message User {
		string username = 1;
		string password = 2;
		string name = 3;
		string contact = 4;
		Status status = 5;
	}
	User user = 1;
}
message CreateUserReply {}

message UpdateUserRequest {
	message User {
		string username = 1;
		string name = 2;
		string contact = 3;
	}
	uint32 id = 1;
	User user = 2;
}
message UpdateUserReply {}

message UpdatePwdRequest {
	uint32 id = 1;
	string password = 2;
}
message UpdatePwdReply {}

message UpdateStatusRequest {
	uint32 id = 1;
	Status status = 2;
}
message UpdateStatusReply {}

message DeleteUserRequest {
	uint32 id = 1;
}
message DeleteUserReply {}

message GetUserRequest {
	uint32 id = 1;
}
message GetUserReply {
	message User {
		uint32 id = 1;
		string username = 2;
		string password = 3;
		string name = 4;
		string contact = 5;
		Status status = 6;
	}
	User user = 1;
}

message GetDeletedUserRequest {
	uint32 id = 1;
}
message GetDeletedUserReply {
	message User {
		uint32 id = 1;
		string username = 2;
		string password = 3;
		string name = 4;
		string contact = 5;
		Status status = 6;
	}
	User user = 1;
}

message ListUserRequest {
	message Paging {
		uint32 index = 1;
		uint32 size = 2;
	}
	message Condition {
		string keyword = 1;
		repeated Status status = 4;
		repeated uint32 Group = 5;
	}
	Paging paging = 1;
	Condition condition = 2;
}
message ListUserReply {
	message Paging {
		uint32 index = 1;
		uint32 size = 2;
		uint32 page = 4;
		uint32 total = 3;
	}
	message User {
		message Group {
			uint32 id = 1;
			string name = 2;
		}
		uint32 id = 1;
		string username = 2;
		string password = 3;
		string name = 4;
		string contact = 5;
		Status status = 6;
		repeated Group group = 7;
	}
	Paging paging = 1;
	repeated User users = 2;
}

message GetUserByUsernameRequest {
	string username = 1;
}
message GetUserByUsernameReply {
	message User {
		uint32 id = 1;
		string username = 2;
		string password = 3;
		string name = 4;
		string contact = 5;
		Status status = 6;
	}
	User user = 1;
}

message GetStatusRequest {}
message GetStatusReply {
	message Status {
		uint32 id = 1;
		string name = 2;
	}
	repeated Status status = 1;
}

message DistributeGroupRequest {
	uint32 id = 1;
	repeated uint32 groups = 2;
}
message DistributeGroupReply {}

message BatchGetUserRequest {
	repeated uint32 users = 1;
}
message BatchGetUserReply {
	message User {
		uint32 id = 1;
		string username = 2;
		string name = 3;
		Status status = 4;
	}
	repeated User users = 1;
}