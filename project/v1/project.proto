syntax = "proto3";

package api.project.v1;
import "google/api/annotations.proto";

option go_package = "project/api/project/v1;v1";

service Project {
	rpc CreateProject (CreateProjectRequest) returns (CreateProjectReply) {
		option (google.api.http) = {
			post: "/api/v1/project/create",
			body: "*"
		};
	}
	rpc UpdateProject (UpdateProjectRequest) returns (UpdateProjectReply) {
		option (google.api.http) = {
			post: "/api/v1/project/update",
			body: "*"
		};
	}
	rpc DeleteProject (DeleteProjectRequest) returns (DeleteProjectReply) {
		option (google.api.http) = {
			post: "/api/v1/project/delete",
			body: "*"
		};
	}
	rpc GetProject (GetProjectRequest) returns (GetProjectReply) {
		option (google.api.http) = {
			post: "/api/v1/project/get",
			body: "*"
		};
	}
	rpc ListProject (ListProjectRequest) returns (ListProjectReply) {
		option (google.api.http) = {
			post: "/api/v1/project/list",
			body: "*"
		};
	}
	rpc DeleteProjectUser(DeleteProjectUserRequest) returns (DeleteProjectUserReply) {
		option (google.api.http) = {
			post: "/api/v1/project/user/delete",
			body: "*"
		};
	}
	rpc DeleteProjectTag(DeleteProjectTagRequest) returns (DeleteProjectTagReply) {
		option (google.api.http) = {
			post: "/api/v1/project/tag/delete",
			body: "*"
		};
	}
	rpc GetProjectState(GetProjectStateRequest) returns (GetProjectStateReply) {
		option (google.api.http) = {
			post: "/api/v1/project/state",
			body: "*"
		};
	}
	rpc GetProjectUser(GetProjectUserRequest) returns (GetProjectUserReply) {
		option (google.api.http) = {
			post: "/api/v1/project/user/get",
			body: "*"
		};
	}
	rpc UpdateProjectUser(UpdateProjectUserRequest) returns (UpdateProjectUserReply) {
		option (google.api.http) = {
			post: "/api/v1/project/user/update",
			body: "*"
		};
	}
	rpc UpdateProjectTag(UpdateProjectTagRequest) returns (UpdateProjectTagReply) {
		option (google.api.http) = {
			post: "/api/v1/project/tag/update",
			body: "*"
		};
	}
	rpc GetProjectTag(GetProjectTagRequest) returns (GetProjectTagReply) {
		option (google.api.http) = {
			post: "/api/v1/project/tag/get",
			body: "*"
		};
	}
}

enum State {
	Running = 0;
	Completed = 1;
}

message CreateProjectRequest {
	message Project {
		string name = 1;
		uint32 created_user = 2;
	}
	Project project = 1;
	repeated uint32 users = 2;
	repeated uint32 tags = 3;
}
message CreateProjectReply {}

message UpdateProjectRequest {
	message Project {
		uint32 id = 1;
		string name = 2;
	}
	Project project = 1;
}
message UpdateProjectReply {}

message DeleteProjectRequest {
	uint32 id = 1;
}
message DeleteProjectReply {}

message GetProjectRequest {
	uint32 id = 1;
}
message GetProjectReply {
	message Project {
		uint32 id = 1;
		string name = 2;
		float pass_rate = 3;
		uint32 remaining_tasks = 4;
		uint32 remaining_reviews = 5;
		uint32 remaining_modification = 6;
		State state = 7;
	}
	Project project = 1;
}

message ListProjectRequest {
	message Paging {
		uint32 index = 1;
		uint32 size = 2;
	}
	message Condition {
		string keyword = 1;
		repeated State state = 2;
	}
	Paging paging = 1;
	Condition condition = 2;
}
message ListProjectReply {
	message Paging {
		uint32 index = 1;
		uint32 size = 2;
		uint32 page = 3;
		uint32 total = 4;
	}
	message Project {
		uint32 id = 1;
		string name = 2;
		float pass_rate = 3;
		uint32 remaining_tasks = 4;
		uint32 remaining_reviews = 5;
		uint32 remaining_modification = 6;
		State state = 7;
	}
	Paging paging = 1;
	repeated Project projects = 2;
}

message DeleteProjectUserRequest {
	uint32 user_id = 1;
}
message DeleteProjectUserReply {}

message DeleteProjectTagRequest {
	uint32 tag_id = 1;
}
message DeleteProjectTagReply {}

message GetProjectStateRequest {}
message GetProjectStateReply {
	message State {
		uint32 id = 1;
		string name = 2;
	}
	repeated State state = 1;
}

message GetProjectUserRequest {
	uint32 project_id = 1;
}
message GetProjectUserReply {
	repeated uint32 users = 1;
}

message UpdateProjectUserRequest {
	uint32 project_id = 1;
	repeated uint32 users = 2;
}
message UpdateProjectUserReply {}

message UpdateProjectTagRequest {
	uint32 project_id = 1;
	repeated uint32 tags = 2;
}
message UpdateProjectTagReply {}

message GetProjectTagRequest {
	uint32 project_id = 1;
}
message GetProjectTagReply {
	repeated uint32 tags = 2;
}